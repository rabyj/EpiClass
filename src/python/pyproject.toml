# -- PYTHON INSTALL SECTION --
[build-system]
requires = ["setuptools>=75,<81", "pip>=23", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "EpiClass"
dynamic = ["version", "dependencies"]
description = "Apply machine learning to epigenomic data classification."
authors = [{ name = "Joanny Raby", email = "Joanny.Raby@usherbrooke.ca" }]
requires-python = ">=3.8, <3.12"

[tool.setuptools.dynamic]
version = { file = "VERSION" }
dependencies = { file = "requirements/req_core.in" }

[tool.uv.pip]
only-binary = [
    "torch",
    "pytorch-lightning",
    "lgbm",
    "llvmlite",
    "h5py",
    "numpy",
    "scipy",
    "pandas",
    "scikit-learn",
]
[tool.pip]
only-binary = [
    "torch",
    "pytorch-lightning",
    "lgbm",
    "llvmlite",
    "h5py",
    "numpy",
    "scipy",
    "pandas",
    "scikit-learn",
]


[project.optional-dependencies]
utils = [
    "GitPython>=3.1, <3.2",
    "jupyter>=1.1",
    "kaleido>=0.1, <0.2",
    "plotly>=5.22, <5.23",
    "pyBigWig>=0.3.22",
    "seaborn>=0.13, <0.14",
    "tables>=3.8",
    "umap-learn>=0.5, <0.6",
    "UpSetPlot>=0.8, <0.9",
    "statsmodels",
    "scp",
    "paramiko",
]
test = [
    "EpiClass[utils]",
    "pytest-mock>=3.14, <3.15",
    "pytest>=8.3, <8.4",
]
dev = [
    "EpiClass[utils,test]",
    "black>=23.1, <24",
    "isort>=5.12, <6",
    "pylint>=3.2, <4",
    "pre-commit>=3.5, <4",
]

# -- OTHER TOOLS CONFIGURATION --
[tool.black]
line-length = 90
force-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | venv
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.isort]
profile = "black" # make it compatible with black
atomic = true
combine_as_imports = true
line_length = 90
known_first_party = ["epiclass", "tests"]
known_local_folder = ["./epiclass", "./tests"]
src_paths = ["./epiclass", "./tests"]


[tool.pyright]
ignore = [
    "**/epilap/**",
    "**/notes",
    ".git",
    "**/bin/**",
    "**/site-packages/**",
    "venv-epilap-pytorch",
]
exclude = ["**/notes", "**/epilap/**", ".git", "**/bin/**", "**/lib/**"]

[tool.pylint.MASTER]
init-hook = "import sys; sys.path.insert(0, 'src/python')"
ignore-paths = ["venv-epilap-pytorch"]

[tool.pylint.main]
extension-pkg-allow-list = [
    "numpy",
    "torch",
    "pytorch_lightning",
    "optuna.integration.lightgbm",
    "pyBigWig",
]

[tool.pylint.messages_control]
disable = [
    "abstract-method",
    "bad-inline-option",
    "deprecated-pragma",
    "file-ignored",
    "invalid-name",
    "line-too-long",
    "locally-disabled",
    "suppressed-message",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-statements",
    "use-symbolic-message-instead",
    "useless-suppression",
    "wrong-import-order",
    "wrong-import-position",
]

[tool.pylint.typecheck]
generated-members = [
    "numpy.*",
    "torch.*",
    "pytorch_lightning.*",
    "optuna.integration.lightgbm.*",
    "pyBigWig.*",
    "sklearn.*",
]
ignored-modules = [
    "pandas",
    "requests",
    "numpy",
    "torch",
    "pytorch_lightning",
    "optuna.integration.lightgbm",
    "pyBigWig",
    "sklearn",
]

[tool.pylint.format]
max-line-length = 120


[tool.pytest.ini_options]
testpaths = ["tests"]
minversion = "6.0"
filterwarnings = [
    "ignore::DeprecationWarning:jupyter_client.*",
    "ignore::DeprecationWarning:comet_ml.monkey_patching",
    "ignore:.*declarative_base.*",
    "ignore:.*nopython.*",
    "ignore:.*Using a non-full backward hook.*",
    "ignore:.*Cannot read file directly.*",
    "ignore:.*pkg_resources.declare_namespace.*:DeprecationWarning",
    "ignore:.*pkg_resources is deprecated as an API.*",
    "ignore:.*RequirementCache.*:DeprecationWarning",
]
# general format: action:message:category:module:line
